#! /bin/bash -l

set -x

echo ${GXBASE}

pipeuser=PIPEUSER
base=BASEDIR
obslist=OBSLIST
stem=STEM

# start download
cd "${base}" || exit 1
list=$(awk '{print substr($1,8,10)}' < "${obslist}_manta.tmp")
n=1
for obsnum in $list
do
    track_task.py start --jobid="${SLURM_JOBID}" --taskid=$n --start_time="$(date +%s)"
    ((n+=1))
done


mwa_client --csv="${obslist}_manta.tmp" --dir="${base}"

n=1
for obsnum in $list
do
    if [[ "$stem" == 'ms' ]]
    then
        if [[ -e "${obsnum}_*.zip" ]]
        then
            if [[ ! -d "${obsnum}" ]]
            then
                mkdir "${obsnum}"
            fi

            cd "${obsnum}" || exit 1

            if [[ -d "${obsnum}.ms" ]]
            then
                echo "${obsnum}.ms already exists; please remove directory before running unzip job."
                track_task.py fail --jobid="${SLURM_JOBID}" --taskid="${n}" --finish_time="$(date +%s)"
            else
                mv "../${obsnum}_*.zip" ./
                unzip "${obsnum}_*.zip"
                if [[ $? ]]
                then
                    rm "${obsnum}_ms.zip"
                    track_task.py finish --jobid="${SLURM_JOBID}" --taskid="${n}" --finish_time="$(date +%s)"
                else
                    echo "Failed to unzip ${obsnum}_ms.zip"
                    track_task.py fail --jobid="${SLURM_JOBID}" --taskid="${n}" --finish_time="$(date +%s)"
                fi
            fi
            cd ../
        fi
    fi
    
    if [[ "$stem" == 'vis' ]]
    then
        if [[ -e "${obsnum}_*.zip" ]]
        then
            echo "${obsnum}_vis.zip downloaded successfully; now run cotter."
            track_task.py finish --jobid="${SLURM_JOBID}" --taskid="${n}" --finish_time="$(date +%s)"
            track_task.py obs_status --obs_id="${obsnum}" --status='downloaded'
        else
            echo "${obsnum}_ms.zip failed to download."
            track_task.py fail --jobid="${SLURM_JOBID}" --taskid="${n}" --finish_time="$(date +%s)"
        fi
    fi
    ((n+=1))
done
