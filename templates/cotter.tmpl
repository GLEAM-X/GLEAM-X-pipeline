#! /bin/bash -l
set -x

pipeuser=PIPEUSER
obsnum=OBSNUM

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
    echo "cotter obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

datadir=DATADIR
tres=TRES
fres=FRES
memory=${GXMEMORY}

# start task
track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "${datadir}" || exit 1

obsfile=$(find ./"${obsnum}"_[0-9]*_vis.??? -maxdepth 1 -type f)
filename=$(basename -- "$obsfile")
ext="${filename##*.}"
if [[ -e "${obsfile}" ]]
then
    if [[ "${ext}" == 'zip' ]]
    then
        echo "Unzipping raw visibilities into ${obsnum}"
        mkdir "${obsnum}"
        cd "${obsnum}" || exit
        mv "../${obsfile}" ./
        unzip "${obsfile}" && \
        rm "${obsfile}"
    elif [[ "${ext}" == 'tar' ]]
    then 
        echo "Untarring raw visibilites into ${obsnum}"     
        mkdir "${obsnum}"
        cd "${obsnum}" || exit 1
        mv "../${obsfile}" ./
        tar xvf "./${obsfile}" && \
        rm "./${obsfile}"
    else 
        echo "The extension ${ext} of ${obsfile} is not known. "
        exit 1
    fi
else
    echo "${obsfile} does not exit. Exiting. "
    exit 1
fi

zipflag="${obsnum}_flags.zip"
if [[ -e ${zipflag} ]]
then
    unzip "${zipflag}"
    flagfiles="-flagfiles ${obsnum}_%%.mwaf"
else
    flagfiles=""
fi

if [[ ! -d ${obsnum}.ms ]]
then
    metafits="${obsnum}.metafits"
    if [[ -e "${metafits}" ]]
    then
        rm "${metafits}"
    fi 

    if [[ ! -e ${metafits} ]] || [[ ! -s ${metafits} ]]
    then
        wget -O "${metafits}" http://ws.mwatelescope.org/metadata/fits?obs_id=${obsnum}
    fi
    
    # Use 80% of the memory
    cotter \
            ${flagfiles} \
            -absmem ${memory} \
            -timeres ${tres} \
            -freqres ${fres} \
            -allowmissing \
            -edgewidth 80 \
            -m ${metafits} \
            -o ${obsnum}.ms \
            ./*gpubox*.fits

    test_fail $?
    if [[ -d ${obsnum}.ms ]]
    then 
         rm ./*gpubox*fits ./*.zip ./*.mwaf "${metafits}"
    fi
else
    echo "Cotter has already run for ${obsnum}.ms"
fi

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
