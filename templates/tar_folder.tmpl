#! /bin/bash -l

set -x

pipeuser=PIPEUSER
obsnum=OBSNUM
mode=TARMODE

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}p" "${obsnum}")
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"
echo "tar_folder obsid ${obsnum}"


function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

base=BASEDIR

cd "${base}" || exit 1

OBS="${obsnum}"
OBSTAR="${OBS}.tar"

if [ $mode = 'c' ]
then 
    if [[ -d "${OBS}" ]]
    then
        echo "Taring ${OBS}" && \
        tar vcf "${OBSTAR}" "${OBS}" && \
        echo "Removing original ${OBS}" && \
        rm -r "${OBS}"
    else
        echo "${OBS} directory not found. Already compressed?"
    fi
fi

if [ $mode = 'd' ]
then
    if [[ -f "${OBSTAR}" ]]
    then
        echo "Extracting ${OBSTAR}" && \
        tar --touch -xvf "${OBSTAR}" && \
        echo "Removing tar file" && \
        rm -r "${OBSTAR}"
    else
        echo "${OBSTAR} not found. Has ${OBS} been compressed?"
    fi
fi

echo 'Updating database'
track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
