#!/bin/bash -l

# Perform binocular imaging and source-finding

pipeuser=PIPEUSER
obsnum=OBSNUM

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}p" "${obsnum}")
    echo "binoc obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"

basedir=BASEDIR

# start
track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "${basedir}/${obsnum}" || exit

track_task.py start --jobid="${SLURM_JOBID}" --taskid=1 --start_time="$(date +%s)"

# S/N Threshold at which to stop cleaning
tsigma=3

# Set up telescope-configuration-dependent options
# These options are different from the normal imaging scripts because the resolution has been halved
if [[ $obsnum -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=2.0
    imsize=2200
    robust=-1.0
# TODO include flagging for the 128T
elif [[ $obsnum -ge 1151402936 ]] && [[ $obsnum -lt 1191580576 ]] ; then
    telescope="MWAHEX"
    basescale=3.6
    imsize=1200
    robust=-2.0
elif [[ $obsnum -ge 1191580576 ]] ; then

# To select these antennas I used the following criteria:
# ants_east: East > 700 (43 antennas)
# ants_west: East < -120 (44 antennas)
# ants_north: North > 720 (44 antennas)
# ants_south: North < -70 (43 antennas)
# The flags that produce them are simply the inverse of those subsets
    telescope="MWALB"
    basescale=1.0
    imsize=4400
    robust=0.0
fi

chan=$(pyhead.py -p CENTCHAN "${obsnum}.metafits" | awk '{print $3}')

# Pixel scale
# At least 4 pix per synth beam for each channel
scale="$(echo "$basescale / $chan" | bc -l)"

dirs="north south east west"

for dir in $dirs
do
    cp -rf "${obsnum}.ms" "${obsnum}_flag.ms"
    flags=$(cat "${GXBASE}/configs/flags_${telescope}_${dir}.txt")
    flagantennae "${obsnum}_flag.ms" "${flags}"

    wsclean \
            -abs-mem "${GXMEMORY}" \
            -nmiter 1 \
            -niter 1000000 \
            -mgain 1 \
            -name "${obsnum}_${dir}" \
            -size "${imsize}" "${imsize}" \
            -auto-threshold "$tsigma" \
            -pol I \
            -weight briggs "${robust}" \
            -scale "${scale:0:8}" \
            "${obsnum}_flag.ms"

    BANE --compress --noclobber "${obsnum}_${dir}-image.fits"
    aegean --autoload --table="${obsnum}_${dir}-image.fits" "${obsnum}_${dir}-image.fits"
    rm -rf "${obsnum}_flag.ms"
    rm "${obsnum}_${dir}-image.fits"
    rm "${obsnum}_${dir}-image_bkg.fits"
    rm "${obsnum}_${dir}-image_rms.fits"
    rm "${obsnum}_${dir}-model.fits"
    rm "${obsnum}_${dir}-dirty.fits"
    rm "${obsnum}_${dir}-residual.fits"
done

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
