#! /bin/bash -l

set -x

pipeuser=PIPEUSER
obsnum=OBSNUM
mode=ZIPMODE

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}p" "${obsnum}")
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"
echo "zip_ms obsid ${obsnum}"


function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

base=BASEDIR

datadir="${base}/${obsnum}"
cd "${datadir}" || (echo "Could no change directory to ${datadir}" && exit 1)

MS="${obsnum}.ms"
MSZIP="${MS}.zip"

if [ $mode = 'c' ]
then 
    echo "Zipping ${MS}" && \
    zip -r "${MSZIP}" "${MS}" && \
    echo "Removing original ${MS}" && \
    rm -r "${MS}"
fi

if [ $mode = 'd' ]
then
    echo "Unzipping ${MSZIP}" && \
    unzip "${MSZIP}" && \
    echo "Removing zipped file" && \
    rm -r "${MSZIP}"
fi

echo 'Updating database'
track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
