#! /bin/bash -l

# A template script to generate a model of a-team sources that will be subtracted
# from the visibility dataset. The idea is to generate the model based on bright 
# sources that are above the horizon but are outside the main PB. These will likely
# be sources that can not be deconvolved because the source is not within the 
# clean region. Although a simple subtract does not solve for position dependent
# calibration effects, they should be able to minimise the sidelobes that extend 
# from the sources into the field. Even suppressing these sidelobes by a small
# fraction would be useful. 

set -x

pipeuser=PIPEUSER
obsnum=OBSNUM

# If obsnum is a file, then we are in an array job
if [[ -f "${obsnum}" ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
    echo "uvsubtract obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

datadir=DATADIR

# GLEAM-X sky model
catfile="${GXBASE}/models/GGSM.fits"
if [[ ! -e "${catfile}" ]]
then 
    echo "GGSM is not accessible at ${catfile}"
    exit 1
fi

# start
track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "${datadir}/${obsnum}" || exit

metafits="${obsnum}.metafits"
if [[ ! -e ${metafits} ]] || [[ ! -s ${metafits} ]]
then
    wget -O "${metafits}" "http://ws.mwatelescope.org/metadata/fits?obs_id=${obsnum}"
    test_fail $?
fi

submodel="${obsnum}.ateam_outlier"
casa="casa --nogui --agg --nologger -c"

if [[ ! -e "${submodel}" ]]
then
    echo "Generating model of A-Team sources for uv-subtraction"
    generate_ateam_subtract_model.py "${obsnum}.metafits" \
                                    --mode casa \
                                    --max-response 0.1 \
                                    --min-elevation 0.0 \
                                    --model-output "${submodel}" 
fi

# Check whether the phase centre has already changed
# Calibration will fail if it has, so measurement set must be shifted back to its original position
current=$(chgcentre "${obsnum}.ms") 

if [[ $current == *"shift"* ]] 
then
    echo "Detected that this measurement set has undergone a denormal shift; this must be undone before subtrmodel."
    coords=$(calc_pointing.py "${metafits}")
    echo "Optimally shifting co-ordinates of measurement set to $coords, without zenith shiftback."
    chgcentre \
            "${obsnum}.ms" \
            ${coords}
else 
    echo "Detected that no shift is needed for this measurement set."
fi

$casa \
    "tclean("\
        "vis='${obsnum}.ms', "\
        "imagename='centerfield', "\
        "imsize=[128,128], "\
        "niter=500, "\
        "gain=0.1, "\
        "wprojplanes=1024, "\
        "outlierfile='${submodel}', "\
        "nterms=3, "\
        "threshold='0.1Jy', "\
        "cell='10arcsec', "\
        "weighting='briggs', "\
        "robust=0.0, "\
        "stokes='XXYY', "\
        "savemodel='modelcolumn', "\
        "deconvolver='mtmfs"\
    ")"
test_fail $?

$casa \
   "uvsub("\
        "vis='${obsnum}.ms', "\
        "reverse=False"\
    ")"
test_fail $?

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
