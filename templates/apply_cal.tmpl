#! /bin/bash -l

pipeuser=PIPEUSER
obsnum=OBSNUM
calid=CALID

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
    echo "apply_cal obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

# If obsnum is a file, then we are in an array job
if [[ -f ${calid} ]]
then
    echo "calid file is ${calid}"
    calid=$(sed -n -e "${taskid}"p "${calid}")
    echo "apply_cal calid ${calid}"
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

base=BASEDIR
debug=DEBUG

# WSClean suffixes for subchannels and MFS
subchans="MFS 0000 0001 0002 0003"
# Minimum uvw for self-calibration (in lambda)
minuv=75
# S/N Level at which to choose masked pixels for deepclean
msigma=3
# S/N Threshold at which to stop cleaning
tsigma=1


# apply calibration
track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "${base}/${obsnum}" || exit

metafits="$(ls -t ${obsnum}*metafits* | head -1)"
calfile="${base}/${calid}/${calid}_local_gleam_model_solutions_initial_ref.bin"

if [[ ! -e "${calfile}" ]]
then
    echo "Could not find calibrator file ${calid}"
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit 1
fi

echo "Calibration file is ${calfile}"

# If in debugging mode, apply to the CORRECTED_DATA column
if [[ ! -z $debug ]]
then
    applysolutions \
                ${obsnum}.ms \
                "${calfile}"
    datacolumn="CORRECTED_DATA"
    
# If in production mode, apply to the DATA column
else
    applysolutions \
                -nocopy \
                ${obsnum}.ms \
                "${calfile}"
fi


# Do rough model subtrack image if in debug mode: 
if [[ ! -z $debug ]]
then
    # TODO: Currently just assuming its LB since all GX should be but update 

    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.5
    chan="$(pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}')"
    scale=$(echo "$basescale / $chan" | bc -l)
    wsclean \
            -abs-mem ${GXMEMORY} \
            -mgain 1.0 \
            -nmiter 1 \
            -niter 0 \
            -no-dirty \ 
            -name ${obsnum}_owncal_presubtraction \
            -size ${imsize} ${imsize} \
            -scale ${scale:0:8} \
            -pol XX \
            -data-column ${datacolumn} \
            -channel-range 4 5 \
            -interval 4 5 \
            -nwlayers ${GXNCPUS} \
            "${obsnum}.ms"

    wsclean \
            -abs-mem ${GXMEMORY} \
            -mgain 1.0 \
            -nmiter 1 \
            -niter 0 \
            -no-dirty \
            -name ${obsnum}_owncal_modelcol \
            -size ${imsize} ${imsize} \
            -scale ${scale:0:8} \
            -pol XX \
            -data-column "MODEL_DATA" \
            -channel-range 4 5 \
            -interval 4 5 \
            -nwlayers ${GXNCPUS} \
            "${obsnum}.ms"
    subtrmodel -usemodelcol -datacolumn "CORRECTED_DATA" "MODEL_DATA" ${obsnum}.ms

    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.5
    chan="$(pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}')"
    scale=$(echo "$basescale / $chan" | bc -l)
    wsclean \
            -abs-mem ${GXMEMORY} \
            -mgain 1.0 \
            -nmiter 1 \
            -niter 0 \
            -no-dirty \
            -name ${obsnum}_owncal_postsubtraction \
            -size ${imsize} ${imsize} \
            -scale ${scale:0:8} \
            -pol XX \
            -data-column ${datacolumn} \
            -channel-range 4 5 \
            -interval 4 5 \
            -nwlayers ${GXNCPUS} \
            "${obsnum}.ms"
fi

test_fail $?

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
track_task.py obs_calibrator --obs_id "${obsnum}" --cal_id "${calid}"