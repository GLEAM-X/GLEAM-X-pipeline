#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M HOST
#SBATCH -p workq
#SBATCH --account=ACCOUNT
#SBATCH --time=01:00:00
#SBATCH --nodes=1
TASKLINE
ARRAYLINE

pipeuser=PIPEUSER
obsnum=OBSNUM

# If obsnum is a file, then we are in an array job
if [[ -f ${obsnum} ]]
then
    taskid=${SLURM_ARRAY_TASK_ID}
    jobid=${SLURM_ARRAY_JOB_ID}

    echo "obsfile ${obsnum}"
    obsnum=$(sed -n -e "${SLURM_ARRAY_TASK_ID}"p "${obsnum}")
    echo "uvflag obsid ${obsnum}"
else
    taskid=1
    jobid=${SLURM_JOB_ID}
fi

echo "jobid: ${jobid}"
echo "taskid: ${taskid}"


datadir=DATADIR
debug=DEBUG

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"
    exit "$1"
fi
}

track_task.py start --jobid="${jobid}" --taskid="${taskid}" --start_time="$(date +%s)"

cd "$datadir/${obsnum}" || exit
if [[ -z $debug ]]
then
    ms_flag_by_uvdist.py "${obsnum}.ms" DATA > baselines_to_flag.txt
    if [[ -s baselines_to_flag.txt ]]
    then
        baselines=$(cat baselines_to_flag.txt)
        singularity exec "${GXSINGULARITY}/casa.img" -B "${PWD}" --nogui --agg --nologger -c "flagdata(vis='${obsnum}.ms', datacolumn='data', antenna='${baselines}')" 
    else
        echo "No baselines to flag."
    fi
else
    ms_flag_by_uvdist.py "${obsnum}.ms" CORRECTED_DATA > baselines_to_flag.txt
    if [[ ! -s baselines_to_flag.txt ]]
    then
        baselines=$(cat baselines_to_flag.txt)
        singularity exec "${GXSINGULARITY}/casa.img" -B "${PWD}" --nogui --agg --nologger -c "flagdata(vis='${obsnum}.ms', datacolumn='corrected', antenna='${baselines}')" 
    else
        echo "No baselines to flag."
    fi
fi

track_task.py finish --jobid="${jobid}" --taskid="${taskid}" --finish_time="$(date +%s)"

