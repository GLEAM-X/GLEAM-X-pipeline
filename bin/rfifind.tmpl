#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M HOST
#SBATCH -p STANDARDQ
#SBATCH --account=ACCOUNT
#SBATCH --time=12:00:00
#SBATCH --ntasks=NCPUS
#SBATCH --nodes=1
#SBATCH OUTPUT
#SBATCH ERROR

pipeuser=PIPEUSER
source /group/mwasci/$pipeuser/GLEAM-X-pipeline/GLEAM-X-pipeline.profile

function test_fail {
if [[ $1 != 0 ]]
then
    track_task.py fail --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
    exit $1
fi
}

# Set version number
version=3.0 # First GLEAM-X pipeline data reduction April 2018
cores=`grep -P '^core id\t' /proc/cpuinfo  | wc -l`
obsnum=OBSNUM
base=BASEDIR
# S/N Threshold at which to stop cleaning
tsigma=5

# Update database
cd ${base}
track_task.py start --jobid=${SLURM_JOBID} --taskid=1 --start_time=`date +%s`

datadir=${base}/${obsnum}
cd ${datadir}

metafits=`ls -t ${obsnum}*metafits* | head -1`

# Set up telescope-configuration-dependent options
if [[ $obsnum -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=1.1
    imsize=4000
    robust=-1.0
elif [[ $obsnum -ge 1151402936 ]] && [[ $obsnum -lt 1191580576 ]] ; then
    telescope="MWAHEX"
    basescale=2.0
    imsize=2000
    robust=-2.0
elif [[ $obsnum -ge 1191580576 ]] ; then
    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.0
fi

# Set up channel-dependent options
chan=`pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}'`
bandwidth=`pyhead.py -p BANDWDTH ${metafits} | awk '{print $3}'`
centfreq=`pyhead.py -p FREQCENT ${metafits} | awk '{print $3}'`
chans=`pyhead.py -p CHANNELS ${metafits} | awk '{print $3}' | sed "s/,/ /g"`
chans=($chans)
    # Pixel scale
scale=`echo "$basescale / $chan" | bc -l` # At least 4 pix per synth beam for each channel
    # Naming convention for output files
lowfreq=`echo "$centfreq $bandwidth" | awk '{printf("%00d\n",$1-($2/2.)+0.5)}'`
highfreq=`echo "$centfreq $bandwidth" | awk '{printf("%00d\n",$1+($2/2.)+0.5)}'`
freqrange="${lowfreq}-${highfreq}"
# Calculate min uvw in metres
minuvm=`echo "234 * $minuv / $chan" | bc -l`

# Set up position-dependent options
RA=`pyhead.py -p RA $metafits | awk '{print $3}'`
Dec=`pyhead.py -p Dec $metafits | awk '{print $3}'`

# Check whether the phase centre has already changed
current=`chgcentre ${obsnum}.ms`
if [[ $current == *"shift"* ]]
then
    echo "Detected that this measurement set has already had its phase centre changed. Not shifting."
else
    # Determine whether to shift the pointing centre to be more optimally-centred on the peak of the primary beam sensitivity
    coords=`python /group/mwasci/$PIPEUSER/GLEAM-X-pipeline/bin/calc_pointing.py --metafits=${metafits}`
    echo "Optimally shifting co-ordinates of measurement set to $coords, with zenith shiftback."
    chgcentre ${obsnum}.ms $coords
    # Now shift the pointing centre to point straight up, which approximates minw without making the phase centre rattle around
    chgcentre -zenith -shiftback ${obsnum}.ms
fi

# RFI-searching clean
wsclean -mgain 1.0 \
    -niter 10000000 \
    -auto-threshold $tsigma \
    -name ${obsnum}_rfi \
    -size ${imsize} ${imsize} \
    -scale ${scale:0:8} \
    -weight briggs ${robust} \
    -pol I \
    -channels-out 24 \
    -data-column CORRECTED_DATA \
    ${obsnum}.ms | tee wsclean.log
test_fail $?

track_task.py finish --jobid=${SLURM_JOBID} --taskid=1 --finish_time=`date +%s`
