#!/bin/bash -l
#SBATCH --export=NONE
#SBATCH -M HOST
#SBATCH -p STANDARDQ
#SBATCH --account=ACCOUNT
#SBATCH --time=12:00:00
#SBATCH --ntasks=NCPUS
#SBATCH --nodes=1

# Perform binocular imaging and source-finding

datadir=DATADIR
proj=PROJECT
obsid=OBSID
ncpus=NCPUS
debug=DEBUG
pipeuser=PIPEUSER

cd $datadir/$proj/${obsid}

# S/N Threshold at which to stop cleaning
tsigma=3
# Set up telescope-configuration-dependent options
if [[ $obsid -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=1.1
    imsize=4000
    robust=-1.0
# TODO include flagging for the 128T
elif [[ $obsid -ge 1151402936 ]] && [[ $obsid -lt 1191580576 ]] ; then
    telescope="MWAHEX"
    basescale=2.0
    imsize=2000
    robust=-2.0
elif [[ $obsid -ge 1191580576 ]] ; then
# To select these antennas I used the following criteria:
# ants_east: East > 700 (43 antennas)
# ants_west: East < -120 (44 antennas)
# ants_north: North > 720 (44 antennas)
# ants_south: North < -70 (43 antennas)
# The flags that produce them are simply the inverse of those subsets
    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.0
fi
chan=`pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}'`
# Pixel scale
scale=`echo "$basescale / $chan" | bc -l` # At least 4 pix per synth beam for each channel

dirs="north south east west"

for dir in $dirs
do
    cp -rf ${obsid}.ms ${obsid}_flag.ms
    flags=`cat /group/mwasci/${user}/GLEAM-X-pipeline/configs/flags_${telescope}_${dir}.txt`
    flagantennae ${obsid}_flag.ms $flags

    wsclean -nmiter 5 \
            -niter 1000000
            -name ${obsid}_${dir} \
            -size ${imsize} ${imsize} \
            -auto-threshold $tsigma \
            -pol I \
            -weight briggs ${robust} \
            -scale ${scale:0:8} \
            ${obsid}_flag.ms

    BANE --compress --noclobber ${obsid}_${dir}-image.fits
    aegean --autoload --table=./${obsid}_${dir}-image-pb.fits ./${obsid}_${dir}-image-pb.fits
    rm -rf ${obsid}_flag.ms
#    rm ${obsid}_${dir}-image.fits
#    rm ${obsid}_${dir}-model.fits
#    rm ${obsid}_${dir}-dirty.fits
#    rm ${obsid}_${dir}-residual.fits
done
